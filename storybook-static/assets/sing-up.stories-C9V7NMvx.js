import{j as s}from"./jsx-runtime-CexXSJP5.js";import{z as r,u as f,F as i,t as S}from"./index-CqkZnmtt.js";import{B as w}from"./button-IQQmPvgr.js";import{C as x}from"./card-CNbBWklm.js";import{T as m}from"./typography-hRcQ7HT3.js";import"./index-BP8_t0zE.js";import"./input-DxJd6Y6X.js";import"./clsx-B-dksMZM.js";const j="_card_1d5eo_1",y="_form_1d5eo_7",P="_checkbox_1d5eo_14",U="_title_1d5eo_18",v="_subtitle_1d5eo_23",I="_button_1d5eo_28",F="_caption_1d5eo_33",N="_signIn_1d5eo_39",o={card:j,form:y,checkbox:P,title:U,subtitle:v,button:I,caption:F,signIn:N},k=r.object({confirmPassword:r.string().min(3,"Password has to be at least 3 characters long"),email:r.string().email("Invalid email address"),password:r.string().min(3,"Password has to be at least 3 characters long")}).refine(e=>e.password===e.confirmPassword,{message:"Passwords do not match",path:["confirmPassword"]}),h=e=>{var c,d,l;const{control:t,formState:{errors:n},handleSubmit:_}=f({resolver:S(k)}),b=_(e.onSubmit);return s.jsx(s.Fragment,{children:s.jsxs(x,{className:o.card,children:[s.jsx(m,{className:o.title,variant:"h1",children:"Sign Up"}),s.jsxs("form",{onSubmit:b,children:[s.jsxs("div",{className:o.form,children:[s.jsx(i,{control:t,error:(c=n.email)==null?void 0:c.message,label:"Email",name:"email",placeholder:"Email"}),s.jsx(i,{control:t,error:(d=n.password)==null?void 0:d.message,label:"Password",name:"password",placeholder:"Password",type:"password"}),s.jsx(i,{control:t,error:(l=n.confirmPassword)==null?void 0:l.message,label:"Confirm Password",name:"confirmPassword",placeholder:"Confirm Password",type:"password"})]}),s.jsx(w,{className:o.button,fullWidth:!0,type:"submit",children:"Sign Up"})]}),s.jsx(m,{className:o.subtitle,variant:"body2",children:"Already have an account?"}),s.jsx(m,{className:o.signIn,variant:"link1",children:"Sign In"})]})})};h.__docgenInfo={description:"",methods:[],displayName:"SignUp",props:{onSubmit:{required:!0,tsType:{name:"signature",type:"function",raw:"(data: SignUpFormType) => void",signature:{arguments:[{type:{name:"z.infer",elements:[{name:"signUpSchema"}],raw:"z.infer<typeof signUpSchema>"},name:"data"}],return:{name:"void"}}},description:""}}};const O={component:h,tags:["autodocs"],title:"Auth/userRegistration"},C=e=>{console.log("Form Data:",e)},a={args:{onSubmit:C}};var p,u,g;a.parameters={...a.parameters,docs:{...(p=a.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    onSubmit: handleSignUp
  }
}`,...(g=(u=a.parameters)==null?void 0:u.docs)==null?void 0:g.source}}};const W=["SingUp"];export{a as SingUp,W as __namedExportsOrder,O as default};
